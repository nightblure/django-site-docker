<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b3c107da-9e3d-4335-b87b-f81b8085e72e" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="27OKojW7MGXp9lXsGjr7JYNe7N0" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/desktop/dev/django-site-docker/src/newsapp&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\desktop\dev\django-site-docker\project\newsapp\api\like" />
      <recent name="D:\desktop\dev\django-site-docker\project\newsapp\api\category" />
      <recent name="C:\Users\nightblure\Desktop\dev\django-site-docker\project\templates\categories" />
      <recent name="C:\Users\nightblure\Desktop\dev\django-site-docker\project\templates\inc" />
      <recent name="C:\Users\nightblure\Desktop\dev\django-site-docker\project\templates" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\desktop\dev\django-site-docker" />
      <recent name="D:\desktop\dev\django-site-docker\src" />
      <recent name="D:\desktop\dev\django-site-docker\project\newsapp\tests\api" />
      <recent name="C:\Users\nightblure\Desktop\dev\django-site-docker\project" />
      <recent name="C:\Users\nightblure\Desktop\dev\django-site-docker" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml.prometheus: Compose Deployment">
    <configuration name="debug" type="PythonConfigurationType" factoryName="Python">
      <module name="django site" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="C:\Users\nightblure\AppData\Local\pypoetry\Cache\virtualenvs\djangosite-nA5DcuHA-py3.10\Scripts\python.exe" />
      <option name="SDK_NAME" value="Poetry (django-site-docker)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/manage.py" />
      <option name="PARAMETERS" value="runserver" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.celery: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="celery" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.db: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="services">
            <list>
              <option value="db" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.grafana: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="grafana" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.prometheus: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="prometheus" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.web: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="web" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="pytest in src" type="tests" factoryName="py.test" nameIsGenerated="true">
      <module name="django site" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="C:\Users\nightblure\AppData\Local\pypoetry\Cache\virtualenvs\djangosite-nA5DcuHA-py3.10\Scripts\python.exe" />
      <option name="SDK_NAME" value="Poetry (django-site-docker)" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;-rs&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/src/&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yml.grafana: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.prometheus: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.celery: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.web: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.db: Compose Deployment" />
      <item itemvalue="Python.debug" />
      <item itemvalue="Python tests.pytest in src" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.prometheus: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.grafana: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.db: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.web: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.celery: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b3c107da-9e3d-4335-b87b-f81b8085e72e" name="Changes" comment="" />
      <created>1649185869691</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1649185869691</updated>
    </task>
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName=".env" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>